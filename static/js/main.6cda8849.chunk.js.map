{"version":3,"sources":["BaiTapRedux/BaiTapOanTuXi/Player.js","BaiTapRedux/BaiTapOanTuXi/Computer.js","BaiTapRedux/ThongTinTroChoi.js","BaiTapRedux/BaiTapOanTuXi/KetQuaTroChoi.js","BaiTapRedux/BaiTapOanTuXi/BaiTapOanTuXi.js","App.js","serviceWorker.js","redux/reducer/BaiTapGioHangReducer.js","redux/reducer/BaiTapXucXacReducer.js","redux/reducer/BaiTapOanTuXiReducer.js","redux/reducer/BaiTapDatVeReducer.js","redux/types/BaiTapDatVeType.js","redux/reducer/rootReducer.js","index.js"],"names":["Player","console","log","this","props","mangDatCuoc","className","style","transform","width","height","src","find","item","datCuoc","hinhAnh","alt","map","index","border","onClick","ma","Component","connect","state","BaiTapOanTuXiReducer","dispatch","maCuoc","type","Computer","keyframe","Date","now","position","left","animation","computer","ThongTinTroChoi","taiXiu","soBanThang","tongSoBanChoi","KetQuaTroChoi","BaiTapGameXucXacReducer","ketQua","soBanChoi","BaiTapOanTuXi","playGame","count","randomComputerItem","setInterval","soNgauNhien","Math","floor","random","clearInterval","App","Boolean","window","location","hostname","match","stateGioHang","gioHang","BaiTapGioHangReducer","action","findIndex","spGH","maSP","spGioHang","soLuong","push","gioHangCapNhat","splice","tangGiam","alert","stateDefault","mangXucXac","mangXucXacNgauNhien","i","xucXacNgauNhien","tongSoDiem","reduce","tongDiem","xucXac","mangCuocUpdate","quanCuocNgauNhien","player","danhSachGheDangDat","BaiTapDatVeReducer","danhSachGheDangDatUpdate","gheDangDat","soGhe","ghe","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6cda8849.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass Player extends Component {\n    render() {\n        console.log(\"props\", this.props.mangDatCuoc)\n        return (\n            <div className=\"text-center playerGame\">\n                <div className=\"theThink\">\n\n                    <img style={{ transform: 'rotate(120deg)' }} className=\"mt-3\" width={100} height={100} src={this.props.mangDatCuoc.find(item => item.datCuoc === true).hinhAnh} alt={this.props.mangDatCuoc.find(item => item.datCuoc === true).hinhAnh} />\n                </div>\n                <div className=\"speech-bubble\"></div>\n                <img style={{ width: 200, height: 200 }} src=\"./img/gameOanTuXi/player.png\" alt=\"./img/gameOanTuXi/player.png\" />\n\n                <div className=\"row\">\n                    {this.props.mangDatCuoc.map((item, index) => {\n                        //Xét giá trị đặt cược thêm viền cho item được chọn\n                        let border = {};\n                        if (item.datCuoc) {\n                            border = { border: '3px solid orange' };\n                        }\n                        return <div className=\"col-4\">\n                            <button onClick={()=> {\n                                this.props.datCuoc(item.ma);\n                            }} style={border} className=\"btnItem\">\n                                <img width={50} height={50} src={item.hinhAnh} alt={item.hinhAnh} />\n                            </button>\n                        </div>\n                    })}\n\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        mangDatCuoc: state.BaiTapOanTuXiReducer.mangDatCuoc\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        datCuoc: (maCuoc)=>{\n            dispatch({\n                type: 'CHON_KEO_BUA_BAO',\n                maCuoc\n            })\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(Player)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\n\nclass Computer extends Component {\n    render() {\n\n\n        let keyframe = `@keyframes randomItem${Date.now()} {\n            0% {top: -50px;}\n            25% {top: 100px;}\n            50% {top: -50px;}\n            75% {top: 100px;}\n            100% {top: 0;}\n          }`\n\n\n        return (\n            <div className=\"text-center playerGame\">\n                <style>\n                    {keyframe}\n                </style>\n                <div className=\"theThink\" style={{ position: 'relative' }}>\n                    <img style={{\n                        position: 'absolute',\n                        left: '30%',\n                        animation: `randomItem${Date.now()} 0.5s`,\n                        transform: 'rotate(120deg)'\n                    }} className=\"mt-3\" width={100} height={100} src={this.props.computer.hinhAnh} alt={this.props.computer.hinhAnh} />\n                </div>\n                <div className=\"speech-bubble\"></div>\n                <img style={{ width: 200, height: 200 }} src={\"./img/gameOanTuXi/playerComputer.png\"} alt=\"./img/gameOanTuXi/playerComputer.png\" />\n\n\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        computer: state.BaiTapOanTuXiReducer.computer\n    }\n}\n\n\nexport default connect(mapStateToProps)(Computer)","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nclass ThongTinTroChoi extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"display-4\">BẠN CHỌN: <span className=\"text-danger\">{this.props.taiXiu ? 'TÀI' : 'XỈU'}</span></div>\n                <div className=\"display-4\">BÀN THẮNG: <span className=\"text-success\"> {this.props.soBanThang}</span></div>\n                <div className=\"display-4\">TỔNG SỐ BÀN CHƠI: <span className=\"text-primary\"> {this.props.tongSoBanChoi}</span></div>\n            </div>\n        )\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        soBanThang: state.BaiTapGameXucXacReducer.soBanThang,\n        taiXiu: state.BaiTapGameXucXacReducer.taiXiu,\n        tongSoBanChoi: state.BaiTapGameXucXacReducer.tongSoBanChoi\n    }\n}\n\n\nexport default connect(mapStateToProps)(ThongTinTroChoi)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nclass KetQuaTroChoi extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"display-4 text-warning\">{this.props.ketQua}</div>\n        <div className=\"display-4 text-success\">Số bàn thắng: <span className=\"text-warning\">{this.props.soBanThang}</span></div>\n                <div className=\"display-4 text-success\">Tổng số bàn chơi: <span className=\"text-warning\">{this.props.soBanChoi}</span></div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        ketQua: state.BaiTapOanTuXiReducer.ketQua,\n        soBanThang: state.BaiTapOanTuXiReducer.soBanThang,\n        soBanChoi: state.BaiTapOanTuXiReducer.soBanChoi,\n    }\n}\n\n\nexport default connect(mapStateToProps)(KetQuaTroChoi)","import React, { Component } from 'react'\nimport './BaiTapOanTuXi.css'\nimport Player from './Player'\nimport Computer from './Computer'\nimport ThongTinTroChoi from '../ThongTinTroChoi'\nimport KetQuaTroChoi from './KetQuaTroChoi'\nimport {connect} from 'react-redux';\n\n class BaiTapOanTuXi extends Component {\n\n\n\n    render() {\n\n        return (\n            <div className=\"gameOanTuXi\">\n                <div className=\"row text-center mt-5\">\n                    <div className=\"col-4 mt-3\">\n                        <Player />\n                    </div>\n                    <div className=\"col-4 mt-3\">\n                        <KetQuaTroChoi />\n                        <button onClick={()=>{\n                            this.props.playGame()\n                        }} className=\"btn btn-success p-2 display-4 mt-5\" >Play game</button>\n                    </div>\n                    <div className=\"col-4 mt-3\">\n                        <Computer />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProp = (dispatch) =>{\n    return {\n        playGame: ()=>{\n\n            let count = 0;\n            //Khai báo hàm lặp đi lặp lại\n            let randomComputerItem = setInterval(()=>{\n                let soNgauNhien = Math.floor(Math.random() * 3);\n                dispatch({\n                    type:'RAN_DOM',\n                    soNgauNhien\n                })\n                count ++;\n                if(count >10){\n                    //Dừng hàm setInterval\n                    clearInterval(randomComputerItem)\n                    \n                    dispatch({\n                        type:'END_GAME',\n\n                    })\n\n                }\n            },100)\n\n\n         \n        }\n    }\n}\n\nexport default connect(null,mapDispatchToProp)(BaiTapOanTuXi)","import React, { Component } from \"react\";\n\nimport BaiTapOanTuXi from \"./BaiTapRedux/BaiTapOanTuXi/BaiTapOanTuXi\";\n\nexport default class App extends Component {\n  render() {\n    return (\n      <div>\n        <BaiTapOanTuXi />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\n//setup State giỏ hàng trên store\n\nconst stateGioHang = {\n    gioHang: []\n}\n\n\n\n\nconst BaiTapGioHangReducer = (state = stateGioHang, action) => {\n    switch (action.type) {\n        case 'THEM_GIO_HANG': {\n            let index = state.gioHang.findIndex(spGH => spGH.maSP === action.spGioHang.maSP);\n            if (index !== -1) {\n                state.gioHang[index].soLuong += 1;\n            } else {\n                state.gioHang.push(action.spGioHang)\n            }\n            //Cập nhật lại state.gioHang\n            state.gioHang = [...state.gioHang];\n            // console.log('gioHang',state.gioHang)\n            return { ...state };\n        }; break;\n        case 'XOA_GIO_HANG': {\n            let gioHangCapNhat = [...state.gioHang];\n            //Tìm ra phần tử cần xóa dựa vào maSP\n            let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === action.maSP);\n            if (index !== -1) {\n                gioHangCapNhat.splice(index, 1);\n            }\n            //Cập nhật lại state giỏ hàng mới để component render lại\n            state.gioHang = gioHangCapNhat;\n            return { ...state }\n        }; break;\n        case 'TANG_GIAM_SO_LUONG': {\n            let gioHangCapNhat = [...state.gioHang];\n            //Xử lý tăng giảm trên giỏ hàng cập nhật\n            let index = gioHangCapNhat.findIndex(spGH => spGH.maSP === action.maSP)\n            if (index !== -1) {\n                if (action.tangGiam) {\n                    gioHangCapNhat[index].soLuong += 1;\n                } else {\n                    if (gioHangCapNhat[index].soLuong > 1) {\n                        gioHangCapNhat[index].soLuong -= 1;\n                    }else \n                    {\n                        alert('Số lượng tối thiểu là 1!')\n                    }\n                }\n            }\n            //Lấy giá trị giỏ hàng cập nhật gán vào state.gioHang\n            state.gioHang = gioHangCapNhat;\n            return {...state}\n        }; break;\n        default: return { ...state };\n    }\n}\n\nexport default BaiTapGioHangReducer;","\n\nconst stateDefault = {\n    taiXiu: true, //True: là tài (từ 3->11), false là xỉu (12<)\n    mangXucXac: [\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' },\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' },\n        { ma: 6, hinhAnh: './img/gameXucXac/6.png' }\n    ],\n    soBanThang: 0,\n    tongSoBanChoi: 0\n}\n\n\n\nconst BaiTapGameXucXacReducer = (state = stateDefault, action) => {\n    switch (action.type) {\n        case 'DAT_CUOC':\n            state.taiXiu = action.taiXiu;\n            return { ...state }\n\n        case 'PLAY_GAME': {\n            //Bước 1 xử lý random xúc xắc\n            let mangXucXacNgauNhien = [];\n            for (let i = 0; i < 3; i++) {\n                //Mỗi lần lặp random ra số ngẫu nhiên từ 1 -> 6\n                let soNgauNhien = Math.floor(Math.random() * 6) + 1;\n                //Tạo ra 1 đối tượng xúc xắc từ số ngẫu nhiên\n                let xucXacNgauNhien = { ma: soNgauNhien, hinhAnh: `./img/gameXucXac/${soNgauNhien}.png` };\n                //Push vào mảng xúc xắc ngẫu nhiên\n                mangXucXacNgauNhien.push(xucXacNgauNhien);\n            }\n            //Gán state mangXucXac = mangXucXacNgauNhien\n            state.mangXucXac = mangXucXacNgauNhien;\n            //Xử lý tăng bàn chơi\n            state.tongSoBanChoi += 1;\n            //Xử lý số bàn thắng\n            let tongSoDiem = mangXucXacNgauNhien.reduce((tongDiem, xucXac, index) => {\n                return tongDiem += xucXac.ma;\n            }, 0);\n            //Xét điều kiện để người dùng thắng game\n            if ((tongSoDiem > 11 && state.taiXiu === true) || (tongSoDiem<=11 && state.taiXiu === false)) {\n                state.soBanThang += 1;\n            }\n\n            return { ...state };\n        }\n        default: return { ...state }\n    }\n}\n\nexport default BaiTapGameXucXacReducer;","\n\nconst stateDefault = {\n    mangDatCuoc: [\n        { ma: 'keo', hinhAnh: './img/gameOanTuXi/keo.png', datCuoc: false },\n        { ma: 'bua', hinhAnh: './img/gameOanTuXi/bua.png', datCuoc: false },\n        { ma: 'bao', hinhAnh: './img/gameOanTuXi/bao.png', datCuoc: true },\n    ],\n    ketQua: \"I'm iron man, i love you 3000 !!!\",\n    soBanThang: 0,\n    soBanChoi: 0,\n    computer: { ma: 'bao', hinhAnh: './img/gameOanTuXi/bao.png' },\n}\n\n\nconst BaiTapOanTuXiReducer = (state = stateDefault, action) => {\n\n    switch (action.type) {\n\n        case 'CHON_KEO_BUA_BAO': {\n            //Reset mảng cược\n            let mangCuocUpdate = [...state.mangDatCuoc];\n            //Tạo ra mảng cược mới từ mảng cược cũ và action.maCuoc do người dùng truyền lên\n            mangCuocUpdate = mangCuocUpdate.map((item, index) => {\n                if (item.ma === action.maCuoc) {\n                    return { ...item, datCuoc: true }\n                }\n                return { ...item, datCuoc: false }\n            })\n            //setState của mangCuoc => render lại giao diện\n            state.mangDatCuoc = mangCuocUpdate;\n            return { ...state }\n        }\n        case 'RAN_DOM': {\n            let soNgauNhien = Math.floor(Math.random() * 3);\n            let quanCuocNgauNhien = state.mangDatCuoc[soNgauNhien];\n            state.computer = { ...quanCuocNgauNhien };\n            return { ...state }\n        }\n        case 'END_GAME':\n         \n            let player = state.mangDatCuoc.find(item => item.datCuoc === true);\n            let computer = state.computer;\n            switch (player.ma) {\n                case 'keo':\n                    if (computer.ma === 'keo') {\n                        state.ketQua = 'hòa nhau !!!';\n                    } else if (computer.ma === 'bua') {\n                        state.ketQua = 'thua sml !!!';\n                    } else {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    }\n                    ; break;\n                case 'bua':\n                    if (computer.ma === 'keo') {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    } else if (computer.ma === 'bua') {\n                        state.ketQua = 'hòa nhau !!!';\n                    } else {\n                        state.ketQua = 'thua sml !!!';\n                    } break;\n                case 'bao':\n                    if (computer.ma === 'keo') {\n                        state.ketQua = 'thua sml !!!';\n                    } else if (computer.ma === 'bua') {\n                        state.soBanThang += 1;\n                        state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n                    } else {\n                        state.ketQua = 'hòa nhau !!!';\n                    } break;\n                default: \n                state.soBanThang += 1;\n                state.ketQua = \"I'm iron man, i love you 3000 !!!\";\n            }\n            state.soBanChoi += 1;\n            return { ...state }\n        default: return { ...state }\n    }\n}\n\nexport default BaiTapOanTuXiReducer;","import { DAT_GHE, HUY_GHE } from \"../types/BaiTapDatVeType\";\n\n\nconst stateDefault = {\n    danhSachGheDangDat: [\n\n\n    ]\n}\n\n\n\nconst BaiTapDatVeReducer = (state = stateDefault, action) => {\n\n    switch (action.type) {\n        case DAT_GHE: {\n            let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n            let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.ghe.soGhe);\n            if (index !== -1) { //khi người dùng click Ghế đang đặt đã có trong mảng => remove đi\n                //\n                danhSachGheDangDatUpdate.splice(index, 1);\n            }else {  //khi người dùng click Ghế đang đặt chưa có trong mảng => push vào mảng\n                danhSachGheDangDatUpdate.push(action.ghe)\n            }\n            //Cập nhật lại state => giao diện render lại\n            state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n            return { ...state }\n        }\n        case HUY_GHE : {\n            let danhSachGheDangDatUpdate = [...state.danhSachGheDangDat];\n            let index = danhSachGheDangDatUpdate.findIndex(gheDangDat => gheDangDat.soGhe === action.soGhe);\n            if (index !== -1) { //khi người dùng click Ghế đang đặt đã có trong mảng => remove đi\n                //\n                danhSachGheDangDatUpdate.splice(index, 1);\n            }\n            state.danhSachGheDangDat = danhSachGheDangDatUpdate;\n            return {...state};\n        }\n        default: return { ...state }\n    }\n}\n\n\nexport default BaiTapDatVeReducer;","export const DAT_GHE = 'DAT_GHE';\nexport const HUY_GHE = 'HUY_GHE';","import {combineReducers} from 'redux';\n\nimport BaiTapGioHangReducer from './BaiTapGioHangReducer'\nimport BaiTapGameXucXacReducer from './BaiTapXucXacReducer';\nimport BaiTapOanTuXiReducer from  './BaiTapOanTuXiReducer'\nimport BaiTapDatVeReducer from './BaiTapDatVeReducer';\nconst rootReducer = combineReducers({ //store tổng của ứng dụng\n    stateGioHang: BaiTapGioHangReducer, //state giỏ hàng\n    BaiTapGameXucXacReducer, //state BaiTapGame\n    BaiTapOanTuXiReducer, //state bài tập oan tu xì\n    BaiTapDatVeReducer//state bài tập đặt vé\n})\n\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//setup redux\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport rootReducer from './redux/reducer/rootReducer';\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}